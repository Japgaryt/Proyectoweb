{"remainingRequest":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\src\\views\\base\\ListGroups.vue?vue&type=template&id=253a29f4&","dependencies":[{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\src\\views\\base\\ListGroups.vue","mtime":1634436322822},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}