{"remainingRequest":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\src\\views\\base\\ListGroups.vue?vue&type=template&id=253a29f4&","dependencies":[{"path":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\src\\views\\base\\ListGroups.vue","mtime":1634436322822},{"path":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\japga\\Documents\\ProyectoWeb\\2CoreUI-Vue\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}