{"remainingRequest":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\src\\views\\base\\Forms.vue?vue&type=template&id=459e9c6b&","dependencies":[{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\src\\views\\base\\Forms.vue","mtime":1634436322817},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cvanegas\\Desktop\\Proyecto\\CoreUI-Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}